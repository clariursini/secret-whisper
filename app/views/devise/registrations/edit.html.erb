<%# ------------------------NAVBAR-------------------- %>
<div class="navbar navbar-expand-sm navbar-light navbar-lewagon">
  <div class="col-1 d-flex justify-content-center">
    <button onclick="history.back()" style="background:none; border:none">
      <svg style = "margin-left: 20px;" width="11" height="18" viewBox="0 0 11 18" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M9 2L2 9L9 16" stroke="white" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    </button>
  </div>
  <div class="col-11 d-flex justify-content-center">
    <p style= "margin: 0; font-size: 16px; color: white; margin-left: -20px;">Edit</h1>
  </div>
</div>

<%# ------------------------MAIN-------------------- %>

<div class="container registration-form mt-0">
  <%# <h2>Edit <%= resource_name.to_s.humanize %>
  <%# </h2> %>

  <div class="edit-photo mb-3">
    <% if current_user.photo.key != nil %>
      <%= cl_image_tag current_user.photo.key, class: "edit-photo", id: "primer-photo"%>
    <% else %>
      <%= image_tag "https://cdn-icons-png.flaticon.com/512/149/149071.png", class: "edit-photo", id: "first-photo" %>
    <% end %>
    <img class= "edit-photo d-none" id="user-photo">
  </div>

  <%= simple_form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }) do |f| %>
    <%= f.error_notification %>

    <div class="form-inputs edit-profile">
      <%#= f.input :photo, as: :file, label: "Upload your profile picture" %>
      <%#= f.input :email, required: true, autofocus: true %>
      <%= f.input :photo, input_html: { class: 'd-none'}, label: false %>
      <%= f.input :photo, input_html: { class: 'd-none', id: 'photo-input'}, label_html: { class: 'upload-photo-edit'}, label: image_tag('upload-photo.png')  %>

      <% if devise_mapping.confirmable? && resource.pending_reconfirmation? %>
        <p>Currently waiting confirmation for: <%= resource.unconfirmed_email %></p>
      <% end %>

      <%= f.input :description,
                  required: false,
                  label: "About me",
                  input_html: { autocomplete: "about-me" },
                  class: "about-me"%>
      <%= f.input :name,
                  required: false,
                  label: "Name",
                  input_html: { autocomplete: "Name" } %>
      <%= f.input :age,
                  required: false,
                  label: "Age",
                  input_html: { autocomplete: "Age" } %>
      <%#= f.input :gender,
                  as: :select, collection: ["Female", "Male", "Other"],
                  required: false,
                  label: "Gender",
                  input_html: { multiple: false, autocomplete: "Gender" } %>
      <p style="color: white; font-weight: 400; font-size: 16px;">Gender</p>
      <%= f.input :gender,
                    as: :select, collection: ["Female", "Male", "Other", "Non-Binary", "I'd rather not say"],
                    required: false,
                    label: "Gender",
                    autofocus: true,
                    input_html: { autocomplete: "Select from drop down", oninput: "this.className = ''", class: "d-none" },
                    placeholder: "Select your gender",
                    label: false %>
        <div class="d-flex flex-column">
          <div class="d-flex">
            <p class="gender-btn white-outlined-btn" style="width: 72px; padding: 2px; text-align: center; font-weight: 600; font-size: 14px; border: 2px solid; margin-right: 10px; cursor: pointer">Female</p>
            <p class="gender-btn white-outlined-btn" style="width: 72px; padding: 2px; text-align: center; font-weight: 600; font-size: 14px; border: 2px solid; margin-right: 10px; cursor: pointer">Male</p>
            <p class="gender-btn white-outlined-btn" style="width: 100px; padding: 2px; text-align: center; font-weight: 600; font-size: 14px; border: 2px solid; margin-right: 10px; cursor: pointer;">Non-Binary</p>
          </div>
          <div class="d-flex">
            <p class="gender-btn white-outlined-btn" style="width: 72px; padding: 2px; text-align: center; font-weight: 600; font-size: 14px; border: 2px solid; margin-right: 10px; cursor: pointer">Other</p>
            <p class="gender-btn white-outlined-btn" style="width: 120px; padding: 2px; text-align: center; font-weight: 600; font-size: 14px; border: 2px solid; margin-right: 10px; cursor: pointer;">I'd rather not say</p>
          </div>
        </div>
      <%#= f.input :interests,
                  as: :select, collection: ["Female", "Male", "Other", "Both"],
                  required: false,
                  label: "Interested in:",
                  input_html: { multiple: false, autocomplete: "Interests" } %>
      <%#= f.input :password,
                  hint: "leave it blank if you don't want to change it",
                  required: false,
                  input_html: { autocomplete: "new-password" } %>
      <%#= f.input :password_confirmation,
                  required: false,
                  hint: "leave it blank if you don't want to change it",
                  input_html: { autocomplete: "new-password" } %>
      <%= f.input :current_password,
                  hint: "we need your current password to confirm your changes",
                  required: true,
                  input_html: { autocomplete: "current-password" } %>
    </div>

    <div class="d-flex justify-content-center">
      <div class="form-actions">
        <%= f.button :submit, "Save Changes", class: "white-round-filled-btn", style: "margin-right: 10px;font-weight: 600;" %>
      </div>
    </div>
  <% end %>

    <div>Unhappy?</div>
    <%= button_to "Cancel my account", registration_path(resource_name), data: { confirm: "Are you sure?" }, method: :delete, class: "btn btn-link", style: "padding: 0;"%>

  <%= link_to "Back", :back %>
</div>

<script>
  // ---------------- IMAGE PREVIEW -------------------------------//

  const previewImageOnFileSelect = () => {
  // we select the photo input
  const input = document.getElementById('photo-input');
    // we add a listener to know when a new picture is uploaded
    input.addEventListener('change', () => {
      // we call the displayPreview function (who retrieve the image url and display it)
      displayPreview(input);
    })
}

const displayPreview = (input) => {
    const reader = new FileReader();
    reader.onload = (event) => {
      document.getElementById('user-photo').src = event.currentTarget.result;
    }
    reader.readAsDataURL(input.files[0])
    document.getElementById('user-photo').classList.remove('d-none');
    document.getElementById('primer-photo').classList.add('d-none');
}

if (window.location.href.includes("users/edit")) {
  previewImageOnFileSelect()
}

  // ---------------- RELOAD PAGE -------------------------------//
    if( window.localStorage )
  {
    if( !localStorage.getItem('firstLoad') )
    {
      localStorage['firstLoad'] = true;
      window.location.reload();
    }
    else
      localStorage.removeItem('firstLoad');
  }

  // ----------------SELECT BUTTONS ON CLICK -------------------------------//
  const gender = document.querySelectorAll(".gender-btn")
  gender.forEach((btn) => {
    if (btn.innerText === document.getElementById('user_gender').value) {
      btn.classList.add("bg-white")
      btn.classList.add("text-black")
    }
    btn.addEventListener('click', e => {
      gender.forEach((button) => {
        button.classList.remove("bg-white")
        button.classList.remove("text-black")
        document.getElementById('user_gender').value = btn.innerText
      })
      btn.classList.add("bg-white")
      btn.classList.add("text-black")
    })
  })

</script>
